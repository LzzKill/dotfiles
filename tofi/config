#
### 字体
#
	font = "Fira Code"
	font-size = 12
	# 字体功能设置
	# font-features = "smcp, c2sc" (all small caps)
	# font-features = "liga 0" (disable ligatures)
	font-features = ""
# 字体变化设置
	# font-variations = "wght 900" (Extra bold)
	# font-variations = "wdth 25, slnt -10" (Narrow and slanted)
	font-variations = ""
	# 提示字体
	hint-font = false
  # Catppuccin Mocha
  text-color = #cdd6f4
  prompt-color = #f38ba8
  selection-color = #f9e2af
  background-color = #1e1e2e

#
### 字体主题
#
	# bar, block, underscore
	text-cursor-style = bar
	text-cursor-corner-radius = 0
#
### Text layout
#
	# Prompt to display.
	prompt-text = "❯ "
	prompt-padding = 0
	placeholder-text = ""
	num-results = 0
	result-spacing = 2
	horizontal = false
	min-input-width = 0
#
### Window theming
#
	# Width and height of the window. Can be pixels or a percentage.
	width = 40%
	height = 40%
	outline-width = 0
	outline-color = #080800
	border-width = 1
	border-color = #cceeff
	corner-radius = 18
	padding-top = 6
	padding-bottom = 6
	padding-left = 12
	padding-right = 12
	clip-to-padding = true
	scale = true
#
### 窗口位置
#
	output = ""
	# bottom, bottom-left, left, center.
	anchor = center

	exclusive-zone = -1
	margin-top = 0
	margin-bottom = 0
	margin-left = 0
	margin-right = 0

#
### Behaviour
#
	# Hide the mouse cursor.
	hide-cursor = false

	# Show a text cursor in the input field.
	text-cursor = true

	# Sort results by number of usages in run and drun modes.
	history = true

	# Specify an alternate file to read and store history information
	# from / to. This shouldn't normally be needed, and is intended to
	# facilitate the creation of custom modes.
	# history-file = /path/to/histfile

	# Select the matching algorithm used. If normal, substring matching is
	# used, weighted to favour matches closer to the beginning of the
	# string. If prefix, only substrings at the beginning of the string are
	# matched. If fuzzy, searching is performed via a simple fuzzy matching
	# algorithm.
	#
	# Supported values: normal, prefix, fuzzy

	# If true, require a match to allow a selection to be made. If false,
	# making a selection with no matches will print input to stdout.
	# In drun mode, this is always true.
	require-match = true

	# If true, automatically accept a result if it is the only one
	# remaining. If there's only one result on startup, window creation is
	# skipped altogether.
	auto-accept-single = false

	# If true, typed input will be hidden, and what is displayed (if
	# anything) is determined by the hidden-character option.
	hide-input = false

	# Replace displayed input characters with a character. If the empty
	# string is given, input will be completely hidden.
	# This option only has an effect when hide-input is set to true.
	hidden-character = "*"

	# Instead of printing the selected entry, print the 1-based index of
	# the selection. This option has no effect in run or drun mode. If
	# require-match is set to false, non-matching input will still result
	# in the input being printed.

	# If true, directly launch applications on selection when in drun mode.
	# Otherwise, just print the command line to stdout.
	drun-launch = true

	# The terminal to run terminal programs in when in drun mode.
	# This option has no effect if drun-launch is set to true.
	# Defaults to the value of the TERMINAL environment variable.
	# terminal = foot

	# Delay keyboard initialisation until after the first draw to screen.
	# This option is experimental, and will cause tofi to miss keypresses
	# for a short time after launch. The only reason to use this option is
	# performance on slow systems.
	late-keyboard-init = false

	# If true, allow multiple simultaneous processes.
	# If false, create a lock file on startup to prevent multiple instances
	# from running simultaneously.
	multi-instance = false

	# Assume input is plain ASCII, and disable some Unicode handling
	# functions. This is faster, but means e.g. a search for "e" will not
	# match "é".
	ascii-input = false
